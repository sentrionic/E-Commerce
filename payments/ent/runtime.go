// Code generated by entc, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/google/uuid"
	entorder "github.com/sentrionic/ecommerce/payments/ent/order"
	"github.com/sentrionic/ecommerce/payments/ent/payment"
	"github.com/sentrionic/ecommerce/payments/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	entorderMixin := schema.Order{}.Mixin()
	entorderMixinFields0 := entorderMixin[0].Fields()
	_ = entorderMixinFields0
	entorderFields := schema.Order{}.Fields()
	_ = entorderFields
	// entorderDescCreatedAt is the schema descriptor for created_at field.
	entorderDescCreatedAt := entorderMixinFields0[0].Descriptor()
	// entorder.DefaultCreatedAt holds the default value on creation for the created_at field.
	entorder.DefaultCreatedAt = entorderDescCreatedAt.Default.(func() time.Time)
	// entorderDescUpdatedAt is the schema descriptor for updated_at field.
	entorderDescUpdatedAt := entorderMixinFields0[1].Descriptor()
	// entorder.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	entorder.DefaultUpdatedAt = entorderDescUpdatedAt.Default.(func() time.Time)
	// entorder.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	entorder.UpdateDefaultUpdatedAt = entorderDescUpdatedAt.UpdateDefault.(func() time.Time)
	// entorderDescPrice is the schema descriptor for price field.
	entorderDescPrice := entorderFields[2].Descriptor()
	// entorder.DefaultPrice holds the default value on creation for the price field.
	entorder.DefaultPrice = entorderDescPrice.Default.(uint)
	// entorderDescVersion is the schema descriptor for version field.
	entorderDescVersion := entorderFields[4].Descriptor()
	// entorder.DefaultVersion holds the default value on creation for the version field.
	entorder.DefaultVersion = entorderDescVersion.Default.(uint)
	// entorderDescID is the schema descriptor for id field.
	entorderDescID := entorderFields[0].Descriptor()
	// entorder.DefaultID holds the default value on creation for the id field.
	entorder.DefaultID = entorderDescID.Default.(func() uuid.UUID)
	paymentMixin := schema.Payment{}.Mixin()
	paymentMixinFields0 := paymentMixin[0].Fields()
	_ = paymentMixinFields0
	paymentFields := schema.Payment{}.Fields()
	_ = paymentFields
	// paymentDescCreatedAt is the schema descriptor for created_at field.
	paymentDescCreatedAt := paymentMixinFields0[0].Descriptor()
	// payment.DefaultCreatedAt holds the default value on creation for the created_at field.
	payment.DefaultCreatedAt = paymentDescCreatedAt.Default.(func() time.Time)
	// paymentDescUpdatedAt is the schema descriptor for updated_at field.
	paymentDescUpdatedAt := paymentMixinFields0[1].Descriptor()
	// payment.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	payment.DefaultUpdatedAt = paymentDescUpdatedAt.Default.(func() time.Time)
	// payment.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	payment.UpdateDefaultUpdatedAt = paymentDescUpdatedAt.UpdateDefault.(func() time.Time)
	// paymentDescStripeID is the schema descriptor for stripe_id field.
	paymentDescStripeID := paymentFields[2].Descriptor()
	// payment.StripeIDValidator is a validator for the "stripe_id" field. It is called by the builders before save.
	payment.StripeIDValidator = paymentDescStripeID.Validators[0].(func(string) error)
	// paymentDescID is the schema descriptor for id field.
	paymentDescID := paymentFields[0].Descriptor()
	// payment.DefaultID holds the default value on creation for the id field.
	payment.DefaultID = paymentDescID.Default.(func() uuid.UUID)
}
